*Values
*Units for the values: V, mA, kOhm and mS


* forces current values to be saved
.options savecurrents

*************Circuito que mandei para o messenger*****************


***Fonte dependente (meti amplitude de 13.94 que equivale a 230/16.5)
Vs 1 2 0 sin(0 220 50 0 0 90)

***Envelope detector***
De1 1 3 Default
De2 2 3 Default
De3 0 1 Default
De4 0 2 Default
R1 3 0 600k
C 3 0 560u


***Voltage regulator***
R2 3 4 512.99k
Dr1 4 0 Default_n




.model Default_n D (n=19)
.model Default D
.op
.end



.control

*makes plots in color
set hcopypscolor=0
set color0=white
set color1=black
set color2=red
set color3=blue
set color4=violet
set color5=rgb:3/8/0
set color6=rgb:4/0/0


*3)

*4) 
echo "********************************************"
echo  "Transient analysis"
echo "********************************************"
tran 1e-5 0.6 0.4

***Average***
meas tran vOavg AVG v(4) from=400m to=600m
meas tran vOenvavg AVG v(3) from=400m to=600m

*** max and min vO***
meas tran vOmax MAX v(4) from=400m to=600m
meas tran vOmin MIN v(4) from=400m to=600m

meas tran vOenvmax MAX v(3) from=400m to=600m
meas tran vOenvmin MIN v(3) from=400m to=600m

let vrippleReg = vOmax - vOmin
let vrippleEnv = vOenvmax - vOenvmin

echo  "Regulatorng_TAB"
print  vOmax vOmin vrippleReg vOavg vOavg-12
echo  "Regulatorng_END"

let VI = 220
echo  "Envelopeng_TAB"
print  VI vOenvmax vOenvmin vrippleEnv vOenvavg 
echo  "Envelopeng_END"



hardcopy Vi.ps v(1)-v(2) 
echo vi_FIG

hardcopy Ven.ps v(3)
echo ven_FIG

hardcopy Vout.ps v(4)
echo vout_FIG

hardcopy vout-12.ps v(4)-12
echo vout-12_FIG

let cost = ((4+19)*0.1 + (600000+512990)/1000 + (560/1000000)*1000000)
let merit = (1/(cost * (vrippleReg + abs(vOavg-12) + 1/1000000)))

echo  "Meritng_TAB"
print  cost  merit
echo  "Meritng_END"

quit
.endc


