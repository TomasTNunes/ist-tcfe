*Values
*Units for the values: V, mA, kOhm and mS


* forces current values to be saved
.options savecurrents

*************Circuito que mandei para o messenger*****************


***Fonte dependente (meti amplitude de 13.94 que equivale a 230/16.5)
Vs 1 2 0 sin(0 2000 50 0 0 90)

***Envelope detector***
De1 1 3 Default
De2 2 3 Default
De3 0 1 Default
De4 0 2 Default
R1 3 0 2000k
C 3 0 2000u

***Voltage regulator***
R2 3 4 1270.993k
Dr1 4 0 Default_n



.model Default_n D (n=18)
.model Default D
.op
.end



.control
*set numdgt=9
*makes plots in color
set hcopypscolor=0
set color0=white
set color1=black
set color2=red
set color3=blue
set color4=violet
set color5=rgb:3/8/0
set color6=rgb:4/0/0


*3)

*4) 
echo "********************************************"
echo  "Transient analysis"
echo "********************************************"
tran 1e-5 0.6 0.4
set numdgt=9
***Average***
meas tran vOavg AVG v(4) from=400m to=600m
meas tran vOenvavg AVG v(3) from=400m to=600m

*** max and min vO***
meas tran vOmax MAX v(4) from=400m to=600m
meas tran vOmin MIN v(4) from=400m to=600m

meas tran vOenvmax MAX v(3) from=400m to=600m
meas tran vOenvmin MIN v(3) from=400m to=600m

let vripple_reg = vOmax - vOmin

print vOavg vOmax vOmin vripple_reg

let vripple_env = vOenvmax - vOenvmin

print vOenvavg vOenvmax vOenvmin vripple_env

plot  v(1)-v(2)
hardcopy Vi.ps v(1)-v(2) 

plot  v(3)
hardcopy Ven.ps v(3)

plot  v(4)
hardcopy Vout.ps v(4)

*5)
plot v(4)-12
hardcopy vout-12.ps v(4)-12

let cost = ((4+18)*0.1 + (2000000+1270993)/1000 + (2000/1000000)*1000000)
let merit = (1/(cost * (vripple_reg + abs(vOavg-12) + 1/1000000)))
print cost merit

quit
.endc


